CREATE TABLE IF NOT EXISTS Address(
IDAddress serial PRIMARY KEY,
City VARCHAR(30),
Street VARCHAR(30),
House VARCHAR(30),
Room VARCHAR(30),
IndexAddress INTEGER
);

CREATE TABLE IF NOT EXISTS People(
IDPeople serial PRIMARY KEY,
Family VARCHAR(50),
Name VARCHAR(30),
Patronymic VARCHAR(30),
FloorPeople VARCHAR(1),
Nphone VARCHAR(12),
IDAddress INTEGER,
FOREIGN KEY (IDAddress) REFERENCES Address(IDAddress) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS TrainingDirection(
idtrainingdirection serial PRIMARY KEY,
Name VARCHAR(50),
Cipher VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS GroupStud(
IDGroup serial PRIMARY KEY,
GroupName VARCHAR(10),
IDTrainingDirection INTEGER,
FOREIGN KEY (IDTrainingDirection) REFERENCES TrainingDirection(IDTrainingDirection) ON DELETE CASCADE,
Course INTEGER
);

CREATE TABLE IF NOT EXISTS Student(
IDStudent serial PRIMARY KEY,
IDPeople INTEGER,
FOREIGN KEY (IDPeople) REFERENCES People(IDPeople) ON DELETE CASCADE ON UPDATE CASCADE,
IDGroup INTEGER,
FOREIGN KEY (IDGroup) REFERENCES GroupStud(IDGroup) ON DELETE CASCADE ON UPDATE CASCADE,
Nzach VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS Teacher(
IDTeacher serial PRIMARY KEY,
IDPeople INTEGER,
FOREIGN KEY (IDPeople) REFERENCES People(IDPeople) ON DELETE CASCADE ON UPDATE CASCADE,
Experience INTEGER
);

CREATE TABLE IF NOT EXISTS Subject(
id serial PRIMARY KEY,
SubjectName VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS Loading(
id serial PRIMARY KEY,
IDTeacher INTEGER,
FOREIGN KEY (IDTeacher) REFERENCES Teacher(IDTeacher) ON DELETE CASCADE ON UPDATE CASCADE,
IDSubject INTEGER,
FOREIGN KEY (IDSubject) REFERENCES Subject(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Rating(
id serial PRIMARY KEY,
IDSubject INTEGER,
FOREIGN KEY (IDSubject) REFERENCES Subject(id) ON DELETE CASCADE ON UPDATE CASCADE,
Rating INTEGER,
IDStudent INTEGER,
FOREIGN KEY (IDStudent) REFERENCES Student(IDStudent) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Parents(
IDParents serial PRIMARY KEY,
IDPeople INTEGER,
FOREIGN KEY (IDPeople) REFERENCES People(IDPeople) ON DELETE CASCADE ON UPDATE CASCADE,
IDStudent INTEGER,
FOREIGN KEY (IDStudent) REFERENCES Student(IDStudent) ON DELETE CASCADE ON UPDATE CASCADE
);